{"ast":null,"code":"var _jsxFileName = \"/Users/baekjaein/git-repo/nextjs/20-react-router-spa-2/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { json, useRouteLoaderData, redirect } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EventDetailPage() {\n  _s();\n  const data = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch(`http://localhost:8080/events/${id}`);\n  if (!response.ok) {\n    throw json({\n      message: \"선택된 이벤트의 세부정보를 가져올 수 없습니다.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport async function action({\n  params,\n  request\n}) {\n  const eventId = params.eventId;\n  const response = await fetch(`http://localhost:8080/events/${eventId}`, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"이벤트를 삭제할 수 없습니다.\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["json","useRouteLoaderData","redirect","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","message","status","action","method","$RefreshReg$"],"sources":["/Users/baekjaein/git-repo/nextjs/20-react-router-spa-2/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { json, useRouteLoaderData, redirect } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\n\nexport default function EventDetailPage() {\n  const data = useRouteLoaderData(\"event-detail\");\n  return (\n    <>\n      <EventItem event={data.event} />\n    </>\n  );\n}\n\nexport async function loader({ request, params }) {\n  const id = params.eventId;\n  const response = await fetch(`http://localhost:8080/events/${id}`);\n\n  if (!response.ok) {\n    throw json(\n      { message: \"선택된 이벤트의 세부정보를 가져올 수 없습니다.\" },\n      { status: 500 }\n    );\n  } else {\n    return response;\n  }\n}\n\nexport async function action({ params, request }) {\n  const eventId = params.eventId;\n  const response = await fetch(`http://localhost:8080/events/${eventId}`, {\n    method: request.method,\n  });\n\n  if (!response.ok) {\n    throw json({ message: \"이벤트를 삭제할 수 없습니다.\" }, { status: 500 });\n  }\n\n  return redirect(\"/events\");\n}\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,kBAAkB,EAAEC,QAAQ,QAAQ,kBAAkB;AACrE,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAMC,IAAI,GAAGT,kBAAkB,CAAC,cAAc,CAAC;EAC/C,oBACEI,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACEN,OAAA,CAACF,SAAS;MAACS,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAChC,CAAC;AAEP;AAACP,EAAA,CAPuBD,eAAe;EAAA,QACxBP,kBAAkB;AAAA;AAAAgB,EAAA,GADTT,eAAe;AASvC,OAAO,eAAeU,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAChD,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgCH,EAAE,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMzB,IAAI,CACR;MAAE0B,OAAO,EAAE;IAA6B,CAAC,EACzC;MAAEC,MAAM,EAAE;IAAI,CAChB,CAAC;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAEA,OAAO,eAAeK,MAAMA,CAAC;EAAER,MAAM;EAAED;AAAQ,CAAC,EAAE;EAChD,MAAMG,OAAO,GAAGF,MAAM,CAACE,OAAO;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgCF,OAAO,EAAE,EAAE;IACtEO,MAAM,EAAEV,OAAO,CAACU;EAClB,CAAC,CAAC;EAEF,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMzB,IAAI,CAAC;MAAE0B,OAAO,EAAE;IAAmB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC9D;EAEA,OAAOzB,QAAQ,CAAC,SAAS,CAAC;AAC5B;AAAC,IAAAe,EAAA;AAAAa,YAAA,CAAAb,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}